services:
  worker:
    build: ./worker/
    networks:
      - back-net
    depends_on:
      - db
      - redis
  db:
    image: postgres:latest
    networks:
      - back-net
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./healthchecks/:/healthchecks/
    healthcheck:
      test: ["CMD", "/healthchecks/postgres.sh"]
      interval: 3s
      timeout: 3s
      start_period: 10s
      retries: 3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  redis:
    image: redis:alpine
    networks:
      - back-net
    ports:
      - "6379:6379"
    volumes:
      - ./healthchecks/:/healthchecks/
    healthcheck:
      test: ["CMD", "/healthchecks/redis.sh"]
      interval: 3s
      timeout: 3s
      start_period: 10s
      retries: 3
  vote1:
    build: ./vote/
    networks:
      - front-net
      - back-net
    ports:
      - "5001:5000"
    depends_on:
      - redis
  vote2:
    build: ./vote/
    networks:
      - front-net
      - back-net
    ports:
      - "5002:5000"
    depends_on:
      - redis
  vote3:
    build: ./vote/
    networks:
      - front-net
      - back-net
    ports:
      - "5004:5000"
    depends_on:
      - redis
  result:
    build: ./result/
    networks:
      - front-net
      - back-net
    ports:
      - "3000:3000"
    depends_on:
      - db
  nginx:
    build: ./nginx/
    networks:
      - front-net
    ports:
      - "8000:8000"
    depends_on:
      - vote1
      - vote2
      - vote3
  seed:
    build: ./seed-data/
    networks:
      - front-net
    depends_on:
      - nginx

networks:
  front-net:
  back-net:

volumes:
  db-data:
  cache-data:
  healthchecks:
